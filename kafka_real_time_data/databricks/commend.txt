1. Zookeeper চালু করুন:
> .\bin\windows\zookeeper-server-start.bat .\config\zookeeper.properties

2. Kafka সার্ভার চালু করুন:
> .\bin\windows\kafka-server-start.bat .\config\server.properties

3. Kafka টপিক তৈরি করুন:topic name this (customer_activities)
> kafka-topics.bat --create --topic customer_activities --bootstrap-server localhost:9092

3.5. Kafka টপিক চেক করুন:
> kafka-topics.bat --list --bootstrap-server localhost:9092

4. console-consumer টপিক চেক করুন:
> kafka-console-consumer.bat --bootstrap-server localhost:9092 --topic customer_activities --from-beginning

# ত্রুটি নির্দেশ করে যে 'customer_activities' নামক টপিকটি ইতোমধ্যে আপনার Kafka ক্লাস্টারে বিদ্যমান।
# এই পরিস্থিতি পরিচালনার জন্য নিচে বিকল্পগুলো দেওয়া হলো:

# ১. বিদ্যমান টপিক ব্যবহার করুন
# আপনি 'customer_activities' টপিকটি ব্যবহার করে মেসেজ প্রোডিউস বা কনজিউম করতে পারেন।
# উদাহরণ কমান্ড:
# kafka-console-producer.bat --topic customer_activities --bootstrap-server localhost:9092
# kafka-console-consumer.bat --topic customer_activities --from-beginning --bootstrap-server localhost:9092

# ২. টপিক মুছে পুনরায় তৈরি করুন (যদি প্রয়োজন হয়)
# টপিকটি পুনরায় তৈরি করতে, প্রথমে এটি মুছে ফেলুন (যদি Kafka ব্রোকারে মুছে ফেলার অনুমতি দেওয়া থাকে):
# kafka-topics.bat --delete --topic customer_activities --bootstrap-server localhost:9092
# এরপর, পুনরায় তৈরি করুন:
# kafka-topics.bat --create --topic customer_activities --bootstrap-server localhost:9092

# ৩. টপিকের বিবরণ পরীক্ষা করুন
# টপিকের কনফিগারেশন বা বিবরণ যাচাই করতে এই কমান্ডটি ব্যবহার করুন:
# kafka-topics.bat --describe --topic customer_activities --bootstrap-server localhost:9092

# ৪. ভিন্ন নামের টপিক ব্যবহার করুন
# যদি নতুন একটি টপিকের প্রয়োজন হয়, তাহলে একটি ভিন্ন নাম ব্যবহার করুন:
# kafka-topics.bat --create --topic new_customer_activities --bootstrap-server localhost:9092

# ৫. মেট্রিক নামের সতর্কতা সমাধান করুন
# ডট (.) এবং আন্ডারস্কোর (_) উভয়ই টপিকের নামে ব্যবহার না করার চেষ্টা করুন। একটি ধারাবাহিক নামকরণ কৌশল ব্যবহার করুন, যেমন আন্ডারস্কোরের পরিবর্তে ড্যাশ (-) ব্যবহার:
# kafka-topics.bat --create --topic customer-activities --bootstrap-server localhost:9092


----------------------------------------------------------------------



Kafka Topic তৈরি করার Bangla Example
তুমি যদি Kafka-তে একটি নতুন Topic তৈরি করতে চাও, তাহলে নিচের কমান্ড ব্যবহার করতে পারো:

bash
bin/kafka-topics.sh --create --topic user_activities --bootstrap-server localhost:9092 --partitions 3 --replication-factor 1

এই উদাহরণটি কী বোঝায়?
Topic Name:
user_activities নামে একটি নতুন Topic তৈরি হবে।
এটি হলো ডেটার ক্যাটাগরি যেখানে প্রোডিউসার ডেটা পাঠাবে এবং কনজিউমার ডেটা গ্রহণ করবে।

Partitions:
--partitions 3 দ্বারা Topic-এর মধ্যে ৩টি Partition থাকবে।
Partition হলো ডেটা বিভক্ত করার উপায়, যা Kafka-এর মধ্যে parallelism এবং scalability নিশ্চিত করে।

Replication Factor:
--replication-factor 1 দ্বারা বোঝানো হয়েছে, প্রতিটি Partition-এর জন্য একটি মাত্র রেপ্লিকা থাকবে।
Replication Factor হলো ডেটা নিরাপত্তার জন্য একটি Backup কপি রাখা। যদি একটি Broker নষ্ট হয়, অন্য একটি রেপ্লিকা থেকে ডেটা পাওয়া যায়।

Bootstrap Server:
--bootstrap-server localhost:9092 দ্বারা Kafka সার্ভারের ঠিকানা নির্দিষ্ট করা হয়েছে।

Kafka Topic তৈরি করার সম্পূর্ণ প্রক্রিয়া (Step-by-Step)
1. Zookeeper চালু করো:
   bash
   bin/zookeeper-server-start.sh config/zookeeper.properties

2. Kafka Broker চালু করো:
   bash
   bin/kafka-server-start.sh config/server.properties

3. Topic তৈরি করো:
   bash
   bin/kafka-topics.sh --create --topic user_activities --bootstrap-server localhost:9092 --partitions 3 --replication-factor 1

4. Topic তালিকা চেক করো:
   bash
   bin/kafka-topics.sh --list --bootstrap-server localhost:9092

এটি তোমার তৈরি করা সব Topic-এর নাম দেখাবে।

বাংলায় উপদেশ
পার্টিশন (Partitions):
যদি ডেটার পরিমাণ বেশি হয়, তাহলে বেশি পার্টিশন ব্যবহার করো।
উদাহরণ: --partitions 5

রেপ্লিকেশন ফ্যাক্টর (Replication Factor):
যদি তুমি একটি প্রোডাকশন পরিবেশে কাজ করো, --replication-factor কমপক্ষে 3 রাখো।
